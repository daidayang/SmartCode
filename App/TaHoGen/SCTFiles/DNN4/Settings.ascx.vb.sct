<%@ CodeTemplate Language="C#" TargetLanguage="VB.NET" Description="Generates the code-behind for the Settings.ascx web control." %>
<%@ Property Name="Namespace" Type="System.String" Default="YourCompany" Category="Style" Description="Used to generate the Namespace declaration." %>
<%@ Property Name="SourceTable" Type="SmartCode.Model.Mapping.CS.TableSchema" Category="Context" Description="Table that the object is based on." %>
<%@ Property Name="ModuleName" Type="System.String" Default="" Category="Style" Description="" %>
<%@ Assembly Name="SmartCode.Model.Mapping" %>
<%@ Import Namespace="SmartCode.Model.Mapping.CS" %>
<%@ Import Namespace="System.Text.RegularExpressions" %>
<%-- 
	Rev 2007.03.03
	For the latest version of this template, http://quiziqal.com/files/default.aspx		
--%>
Imports DotNetNuke
Imports System.Web.UI

Namespace <%= Namespace %>.Modules.<%= ModuleName %>

    ''' -----------------------------------------------------------------------------
    ''' <summary>
    ''' The Settings class manages Module Settings
    ''' </summary>
    ''' <remarks>
    ''' </remarks>
    ''' <history>
    ''' </history>
    ''' -----------------------------------------------------------------------------
    Partial Class Settings
        Inherits Entities.Modules.ModuleSettingsBase

#Region "Base Method Implementations"

        ''' -----------------------------------------------------------------------------
        ''' <summary>
        ''' LoadSettings loads the settings from the Database and displays them
        ''' </summary>
        ''' <remarks>
        ''' </remarks>
        ''' <history>
        ''' </history>
        ''' -----------------------------------------------------------------------------
        Public Overrides Sub LoadSettings()
            Try
                If (Page.IsPostBack = False) Then
                    If CType(TabModuleSettings("template"), String) <> "" Then
                        txtTemplate.Text = CType(TabModuleSettings("template"), String)
                    End If
                End If
            Catch exc As Exception           'Module failed to load
                ProcessModuleLoadException(Me, exc)
            End Try
        End Sub

        ''' -----------------------------------------------------------------------------
        ''' <summary>
        ''' UpdateSettings saves the modified settings to the Database
        ''' </summary>
        ''' <remarks>
        ''' </remarks>
        ''' <history>
        ''' </history>
        ''' -----------------------------------------------------------------------------
        Public Overrides Sub UpdateSettings()
            Try
                Dim objModules As New Entities.Modules.ModuleController

                objModules.UpdateTabModuleSetting(TabModuleId, "template", txtTemplate.Text)

                ' refresh cache
                SynchronizeModule()
            Catch exc As Exception           'Module failed to load
                ProcessModuleLoadException(Me, exc)
            End Try
        End Sub

#End Region

    End Class

End Namespace

<!-- #include file="%%DNN4%%CommonFunctions.cs" -->